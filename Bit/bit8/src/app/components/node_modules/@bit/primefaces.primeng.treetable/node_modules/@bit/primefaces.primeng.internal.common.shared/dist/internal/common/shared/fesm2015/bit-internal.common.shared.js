import { Component, Directive, TemplateRef, Input, EventEmitter, Output, ContentChildren, ContentChild, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Header {
}
Header.decorators = [
    { type: Component, args: [{
                selector: 'p-header',
                template: '<ng-content></ng-content>'
            }] }
];
class Footer {
}
Footer.decorators = [
    { type: Component, args: [{
                selector: 'p-footer',
                template: '<ng-content></ng-content>'
            }] }
];
class PrimeTemplate {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
    /**
     * @return {?}
     */
    getType() {
        return this.name;
    }
}
PrimeTemplate.decorators = [
    { type: Directive, args: [{
                selector: '[pTemplate]',
                host: {}
            },] }
];
/** @nocollapse */
PrimeTemplate.ctorParameters = () => [
    { type: TemplateRef }
];
PrimeTemplate.propDecorators = {
    type: [{ type: Input }],
    name: [{ type: Input, args: ['pTemplate',] }]
};
/* Deprecated */
class Column {
    constructor() {
        this.filterType = 'text';
        this.exportable = true;
        this.resizable = true;
        this.sortFunction = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.templates.forEach((/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            switch (item.getType()) {
                case 'header':
                    this.headerTemplate = item.template;
                    break;
                case 'body':
                    this.bodyTemplate = item.template;
                    break;
                case 'footer':
                    this.footerTemplate = item.template;
                    break;
                case 'filter':
                    this.filterTemplate = item.template;
                    break;
                case 'editor':
                    this.editorTemplate = item.template;
                    break;
                default:
                    this.bodyTemplate = item.template;
                    break;
            }
        }));
    }
}
Column.decorators = [
    { type: Component, args: [{
                selector: 'p-column',
                template: ''
            }] }
];
Column.propDecorators = {
    field: [{ type: Input }],
    colId: [{ type: Input }],
    sortField: [{ type: Input }],
    filterField: [{ type: Input }],
    header: [{ type: Input }],
    footer: [{ type: Input }],
    sortable: [{ type: Input }],
    editable: [{ type: Input }],
    filter: [{ type: Input }],
    filterMatchMode: [{ type: Input }],
    filterType: [{ type: Input }],
    excludeGlobalFilter: [{ type: Input }],
    rowspan: [{ type: Input }],
    colspan: [{ type: Input }],
    scope: [{ type: Input }],
    style: [{ type: Input }],
    styleClass: [{ type: Input }],
    exportable: [{ type: Input }],
    headerStyle: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    bodyStyle: [{ type: Input }],
    bodyStyleClass: [{ type: Input }],
    footerStyle: [{ type: Input }],
    footerStyleClass: [{ type: Input }],
    hidden: [{ type: Input }],
    expander: [{ type: Input }],
    selectionMode: [{ type: Input }],
    filterPlaceholder: [{ type: Input }],
    filterMaxlength: [{ type: Input }],
    frozen: [{ type: Input }],
    resizable: [{ type: Input }],
    sortFunction: [{ type: Output }],
    templates: [{ type: ContentChildren, args: [PrimeTemplate,] }],
    template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }]
};
/* Deprecated */
class Row {
}
Row.decorators = [
    { type: Component, args: [{
                selector: 'p-row',
                template: ``
            }] }
];
Row.propDecorators = {
    columns: [{ type: ContentChildren, args: [Column,] }]
};
/* Deprecated */
class HeaderColumnGroup {
}
HeaderColumnGroup.decorators = [
    { type: Component, args: [{
                selector: 'p-headerColumnGroup',
                template: ``
            }] }
];
HeaderColumnGroup.propDecorators = {
    frozen: [{ type: Input }],
    rows: [{ type: ContentChildren, args: [Row,] }]
};
/* Deprecated */
class FooterColumnGroup {
}
FooterColumnGroup.decorators = [
    { type: Component, args: [{
                selector: 'p-footerColumnGroup',
                template: ``
            }] }
];
FooterColumnGroup.propDecorators = {
    frozen: [{ type: Input }],
    rows: [{ type: ContentChildren, args: [Row,] }]
};
class SharedModule {
}
SharedModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                exports: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup],
                declarations: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup]
            },] }
];

export { Column, Footer, FooterColumnGroup, Header, HeaderColumnGroup, PrimeTemplate, Row, SharedModule };
//# sourceMappingURL=bit-internal.common.shared.js.map
