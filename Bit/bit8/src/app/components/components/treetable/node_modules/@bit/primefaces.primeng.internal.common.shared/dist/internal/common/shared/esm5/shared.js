/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, EventEmitter, Directive, Input, Output, ContentChildren, ContentChild, TemplateRef, QueryList } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
var Header = /** @class */ (function () {
    function Header() {
    }
    Header.decorators = [
        { type: Component, args: [{
                    selector: 'p-header',
                    template: '<ng-content></ng-content>'
                }] }
    ];
    return Header;
}());
export { Header };
var Footer = /** @class */ (function () {
    function Footer() {
    }
    Footer.decorators = [
        { type: Component, args: [{
                    selector: 'p-footer',
                    template: '<ng-content></ng-content>'
                }] }
    ];
    return Footer;
}());
export { Footer };
var PrimeTemplate = /** @class */ (function () {
    function PrimeTemplate(template) {
        this.template = template;
    }
    /**
     * @return {?}
     */
    PrimeTemplate.prototype.getType = /**
     * @return {?}
     */
    function () {
        return this.name;
    };
    PrimeTemplate.decorators = [
        { type: Directive, args: [{
                    selector: '[pTemplate]',
                    host: {}
                },] }
    ];
    /** @nocollapse */
    PrimeTemplate.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    PrimeTemplate.propDecorators = {
        type: [{ type: Input }],
        name: [{ type: Input, args: ['pTemplate',] }]
    };
    return PrimeTemplate;
}());
export { PrimeTemplate };
if (false) {
    /** @type {?} */
    PrimeTemplate.prototype.type;
    /** @type {?} */
    PrimeTemplate.prototype.name;
    /** @type {?} */
    PrimeTemplate.prototype.template;
}
/* Deprecated */
var Column = /** @class */ (function () {
    function Column() {
        this.filterType = 'text';
        this.exportable = true;
        this.resizable = true;
        this.sortFunction = new EventEmitter();
    }
    /**
     * @return {?}
     */
    Column.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.templates.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            switch (item.getType()) {
                case 'header':
                    _this.headerTemplate = item.template;
                    break;
                case 'body':
                    _this.bodyTemplate = item.template;
                    break;
                case 'footer':
                    _this.footerTemplate = item.template;
                    break;
                case 'filter':
                    _this.filterTemplate = item.template;
                    break;
                case 'editor':
                    _this.editorTemplate = item.template;
                    break;
                default:
                    _this.bodyTemplate = item.template;
                    break;
            }
        }));
    };
    Column.decorators = [
        { type: Component, args: [{
                    selector: 'p-column',
                    template: ''
                }] }
    ];
    Column.propDecorators = {
        field: [{ type: Input }],
        colId: [{ type: Input }],
        sortField: [{ type: Input }],
        filterField: [{ type: Input }],
        header: [{ type: Input }],
        footer: [{ type: Input }],
        sortable: [{ type: Input }],
        editable: [{ type: Input }],
        filter: [{ type: Input }],
        filterMatchMode: [{ type: Input }],
        filterType: [{ type: Input }],
        excludeGlobalFilter: [{ type: Input }],
        rowspan: [{ type: Input }],
        colspan: [{ type: Input }],
        scope: [{ type: Input }],
        style: [{ type: Input }],
        styleClass: [{ type: Input }],
        exportable: [{ type: Input }],
        headerStyle: [{ type: Input }],
        headerStyleClass: [{ type: Input }],
        bodyStyle: [{ type: Input }],
        bodyStyleClass: [{ type: Input }],
        footerStyle: [{ type: Input }],
        footerStyleClass: [{ type: Input }],
        hidden: [{ type: Input }],
        expander: [{ type: Input }],
        selectionMode: [{ type: Input }],
        filterPlaceholder: [{ type: Input }],
        filterMaxlength: [{ type: Input }],
        frozen: [{ type: Input }],
        resizable: [{ type: Input }],
        sortFunction: [{ type: Output }],
        templates: [{ type: ContentChildren, args: [PrimeTemplate,] }],
        template: [{ type: ContentChild, args: [TemplateRef, { static: false },] }]
    };
    return Column;
}());
export { Column };
if (false) {
    /** @type {?} */
    Column.prototype.field;
    /** @type {?} */
    Column.prototype.colId;
    /** @type {?} */
    Column.prototype.sortField;
    /** @type {?} */
    Column.prototype.filterField;
    /** @type {?} */
    Column.prototype.header;
    /** @type {?} */
    Column.prototype.footer;
    /** @type {?} */
    Column.prototype.sortable;
    /** @type {?} */
    Column.prototype.editable;
    /** @type {?} */
    Column.prototype.filter;
    /** @type {?} */
    Column.prototype.filterMatchMode;
    /** @type {?} */
    Column.prototype.filterType;
    /** @type {?} */
    Column.prototype.excludeGlobalFilter;
    /** @type {?} */
    Column.prototype.rowspan;
    /** @type {?} */
    Column.prototype.colspan;
    /** @type {?} */
    Column.prototype.scope;
    /** @type {?} */
    Column.prototype.style;
    /** @type {?} */
    Column.prototype.styleClass;
    /** @type {?} */
    Column.prototype.exportable;
    /** @type {?} */
    Column.prototype.headerStyle;
    /** @type {?} */
    Column.prototype.headerStyleClass;
    /** @type {?} */
    Column.prototype.bodyStyle;
    /** @type {?} */
    Column.prototype.bodyStyleClass;
    /** @type {?} */
    Column.prototype.footerStyle;
    /** @type {?} */
    Column.prototype.footerStyleClass;
    /** @type {?} */
    Column.prototype.hidden;
    /** @type {?} */
    Column.prototype.expander;
    /** @type {?} */
    Column.prototype.selectionMode;
    /** @type {?} */
    Column.prototype.filterPlaceholder;
    /** @type {?} */
    Column.prototype.filterMaxlength;
    /** @type {?} */
    Column.prototype.frozen;
    /** @type {?} */
    Column.prototype.resizable;
    /** @type {?} */
    Column.prototype.sortFunction;
    /** @type {?} */
    Column.prototype.templates;
    /** @type {?} */
    Column.prototype.template;
    /** @type {?} */
    Column.prototype.headerTemplate;
    /** @type {?} */
    Column.prototype.bodyTemplate;
    /** @type {?} */
    Column.prototype.footerTemplate;
    /** @type {?} */
    Column.prototype.filterTemplate;
    /** @type {?} */
    Column.prototype.editorTemplate;
}
/* Deprecated */
var Row = /** @class */ (function () {
    function Row() {
    }
    Row.decorators = [
        { type: Component, args: [{
                    selector: 'p-row',
                    template: ""
                }] }
    ];
    Row.propDecorators = {
        columns: [{ type: ContentChildren, args: [Column,] }]
    };
    return Row;
}());
export { Row };
if (false) {
    /** @type {?} */
    Row.prototype.columns;
}
/* Deprecated */
var HeaderColumnGroup = /** @class */ (function () {
    function HeaderColumnGroup() {
    }
    HeaderColumnGroup.decorators = [
        { type: Component, args: [{
                    selector: 'p-headerColumnGroup',
                    template: ""
                }] }
    ];
    HeaderColumnGroup.propDecorators = {
        frozen: [{ type: Input }],
        rows: [{ type: ContentChildren, args: [Row,] }]
    };
    return HeaderColumnGroup;
}());
export { HeaderColumnGroup };
if (false) {
    /** @type {?} */
    HeaderColumnGroup.prototype.frozen;
    /** @type {?} */
    HeaderColumnGroup.prototype.rows;
}
/* Deprecated */
var FooterColumnGroup = /** @class */ (function () {
    function FooterColumnGroup() {
    }
    FooterColumnGroup.decorators = [
        { type: Component, args: [{
                    selector: 'p-footerColumnGroup',
                    template: ""
                }] }
    ];
    FooterColumnGroup.propDecorators = {
        frozen: [{ type: Input }],
        rows: [{ type: ContentChildren, args: [Row,] }]
    };
    return FooterColumnGroup;
}());
export { FooterColumnGroup };
if (false) {
    /** @type {?} */
    FooterColumnGroup.prototype.frozen;
    /** @type {?} */
    FooterColumnGroup.prototype.rows;
}
var SharedModule = /** @class */ (function () {
    function SharedModule() {
    }
    SharedModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule],
                    exports: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup],
                    declarations: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup]
                },] }
    ];
    return SharedModule;
}());
export { SharedModule };
//# sourceMappingURL=data:application/json;base64,